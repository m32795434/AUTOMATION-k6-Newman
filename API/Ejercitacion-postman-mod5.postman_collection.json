{
	"info": {
		"_postman_id": "5ccec183-78ac-4a7e-b67c-6dd84700b5a3",
		"name": "Ejercitacion-postman-mod5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24298748"
	},
	"item": [
		{
			"name": "LIST USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// LIST USER\r",
							"\r",
							"pm.test(\"Estado de respuesta es 200 OK‚úÖ\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Estructura correcta en la respuesta\", function () {\r",
							"    pm.response.to.have.jsonBody(\"page\");\r",
							"    pm.response.to.have.jsonBody(\"per_page\");\r",
							"    pm.response.to.have.jsonBody(\"total\");\r",
							"    pm.response.to.have.jsonBody(\"total_pages\", 2);\r",
							"    pm.response.to.have.jsonBody(\"data\");\r",
							"    pm.response.to.have.jsonBody(\"support\");\r",
							"    //adicional\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Campo 'data' es un array no vac√≠o de objetos\", function () {\r",
							"    pm.expect(pm.response.json().data).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}users?page=2",
					"host": [
						"{{baseURL}}users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "LIST <RESOURCE>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//LIST <RESOURCE>\r",
							"//controlo el estado respuesta de forma acicional\r",
							"pm.test(\"Estado de respuesta es 200 OK‚úÖ\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Campo 'data' debe contener al menos un elemento\", function () {\r",
							"//pm.expect(pm.response.json().data).to.be.an('array').and.has.length.above(0);\r",
							"//lo mismo\r",
							"pm.expect(pm.response.json().data).to.be.an('array').that.is.not.empty;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}unknown",
					"host": [
						"{{baseURL}}unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER - SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//REGISTER - SUCCESSFUL\r",
							"//controlo el estado respuesta de forma acicional\r",
							"pm.test(\"Estado de respuesta es 200 OK‚úÖ\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Campo 'token' existe y campo 'id' es num√©rico > 0üëç\", function () {\r",
							"    const id = pm.response.json().id;\r",
							"    const token = pm.response.json().token;\r",
							"    pm.expect(id).to.be.a(\"number\");\r",
							"    pm.expect(id).to.be.above(0);\r",
							"    pm.expect(token).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}register",
					"host": [
						"{{baseURL}}register"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "eve.holt@reqres.in",
			"type": "string"
		},
		{
			"key": "password",
			"value": "pistol",
			"type": "string"
		}
	]
}